#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by LINQ to SQL template for T4 C#
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.ComponentModel;
using System.Data.Linq;
using System.Data.Linq.Mapping;

namespace SoccerScore.Compact.Linq.Review
{
	[DatabaseAttribute(Name=@"SyncSoccerScore")]
	public partial class DataClassesMatchDataContext2 : DataContext
	{
		private static MappingSource mappingSource = new AttributeMappingSource();
		
		#region Extensibility Method Definitions
		partial void OnCreated();
		partial void InsertAnalysis_Review(SoccerScore.Compact.Linq.Analysis_Review instance);
		partial void UpdateAnalysis_Review(SoccerScore.Compact.Linq.Analysis_Review instance);
		partial void DeleteAnalysis_Review(SoccerScore.Compact.Linq.Analysis_Review instance);
		#endregion
		
		#region Construction
	
		public DataClassesMatchDataContext2(string connection) :
			base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesMatchDataContext2(System.Data.IDbConnection connection) :
			base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesMatchDataContext2(string connection, MappingSource mappingSource) :
			base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesMatchDataContext2(System.Data.IDbConnection connection, MappingSource mappingSource) :
			base(connection, mappingSource)
		{
			OnCreated();
		}
		#endregion
		
		#region Tables
		public Table<SoccerScore.Compact.Linq.Analysis_Review> Analysis_Review
		{
			get { return GetTable<SoccerScore.Compact.Linq.Analysis_Review>(); }
		}
		
		#endregion
	}
}

namespace SoccerScore.Compact.Linq
{	
	[Table(Name=@"Analysis_Review")]
	public partial class Analysis_Review : INotifyPropertyChanging, INotifyPropertyChanged
	{
		#region Property Change Event Handling
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		public event PropertyChangingEventHandler PropertyChanging;
		public event PropertyChangedEventHandler PropertyChanged;
		
		public virtual void SendPropertyChanging()
		{
			if (PropertyChanging != null) {
				PropertyChanging(this, emptyChangingEventArgs);
			}
		}
			
		public virtual void SendPropertyChanged(String propertyName)
		{
			if (PropertyChanged != null) {
				PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		#endregion
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(ChangeAction action);
		partial void OnCreated();
		#endregion

		#region Construction
		public Analysis_Review()
		{
			OnCreated();
		}
		#endregion

		#region Column Mappings
		partial void Onanalysis_review_idChanging(int value);
		partial void Onanalysis_review_idChanged();
		private int _analysis_review_id;
		[Column(Storage=@"_analysis_review_id", AutoSync=AutoSync.OnInsert, DbType=@"Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int analysis_review_id
		{
			get { return _analysis_review_id; }
			set {
				if (_analysis_review_id != value) {
					Onanalysis_review_idChanging(value);
					SendPropertyChanging();
					_analysis_review_id = value;
					SendPropertyChanged("analysis_review_id");
					Onanalysis_review_idChanged();
				}
			}
		}
		
		partial void OnAnalysis_result_idChanging(int? value);
		partial void OnAnalysis_result_idChanged();
		private int? _Analysis_result_id;
		[Column(Storage=@"_Analysis_result_id", Name=@"analysis_result_id", DbType=@"Int")]
		public int? Analysis_result_id
		{
			get { return _Analysis_result_id; }
			set {
				if (_Analysis_result_id != value) {
					OnAnalysis_result_idChanging(value);
					SendPropertyChanging();
					_Analysis_result_id = value;
					SendPropertyChanged("Analysis_result_id");
					OnAnalysis_result_idChanged();
				}
			}
		}
		
		partial void OnLive_table_lib_idChanging(int? value);
		partial void OnLive_table_lib_idChanged();
		private int? _Live_table_lib_id;
		[Column(Storage=@"_Live_table_lib_id", Name=@"live_table_lib_id", DbType=@"Int")]
		public int? Live_table_lib_id
		{
			get { return _Live_table_lib_id; }
			set {
				if (_Live_table_lib_id != value) {
					OnLive_table_lib_idChanging(value);
					SendPropertyChanging();
					_Live_table_lib_id = value;
					SendPropertyChanged("Live_table_lib_id");
					OnLive_table_lib_idChanged();
				}
			}
		}
		
		partial void OnResult_tb_lib_idChanging(int? value);
		partial void OnResult_tb_lib_idChanged();
		private int? _Result_tb_lib_id;
		[Column(Storage=@"_Result_tb_lib_id", Name=@"result_tb_lib_id", DbType=@"Int")]
		public int? Result_tb_lib_id
		{
			get { return _Result_tb_lib_id; }
			set {
				if (_Result_tb_lib_id != value) {
					OnResult_tb_lib_idChanging(value);
					SendPropertyChanging();
					_Result_tb_lib_id = value;
					SendPropertyChanged("Result_tb_lib_id");
					OnResult_tb_lib_idChanged();
				}
			}
		}
		
		partial void OnHome_wChanging(int? value);
		partial void OnHome_wChanged();
		private int? _Home_w;
		[Column(Storage=@"_Home_w", Name=@"home_w", DbType=@"Int")]
		public int? Home_w
		{
			get { return _Home_w; }
			set {
				if (_Home_w != value) {
					OnHome_wChanging(value);
					SendPropertyChanging();
					_Home_w = value;
					SendPropertyChanged("Home_w");
					OnHome_wChanged();
				}
			}
		}
		
		partial void OnHome_dChanging(int? value);
		partial void OnHome_dChanged();
		private int? _Home_d;
		[Column(Storage=@"_Home_d", Name=@"home_d", DbType=@"Int")]
		public int? Home_d
		{
			get { return _Home_d; }
			set {
				if (_Home_d != value) {
					OnHome_dChanging(value);
					SendPropertyChanging();
					_Home_d = value;
					SendPropertyChanged("Home_d");
					OnHome_dChanged();
				}
			}
		}
		
		partial void OnHome_lChanging(int? value);
		partial void OnHome_lChanged();
		private int? _Home_l;
		[Column(Storage=@"_Home_l", Name=@"home_l", DbType=@"Int")]
		public int? Home_l
		{
			get { return _Home_l; }
			set {
				if (_Home_l != value) {
					OnHome_lChanging(value);
					SendPropertyChanging();
					_Home_l = value;
					SendPropertyChanged("Home_l");
					OnHome_lChanged();
				}
			}
		}
		
		partial void OnHome_goalsChanging(double? value);
		partial void OnHome_goalsChanged();
		private double? _Home_goals;
		[Column(Storage=@"_Home_goals", Name=@"home_goals", DbType=@"Float")]
		public double? Home_goals
		{
			get { return _Home_goals; }
			set {
				if (_Home_goals != value) {
					OnHome_goalsChanging(value);
					SendPropertyChanging();
					_Home_goals = value;
					SendPropertyChanged("Home_goals");
					OnHome_goalsChanged();
				}
			}
		}
		
		partial void OnAway_goalsChanging(double? value);
		partial void OnAway_goalsChanged();
		private double? _Away_goals;
		[Column(Storage=@"_Away_goals", Name=@"away_goals", DbType=@"Float")]
		public double? Away_goals
		{
			get { return _Away_goals; }
			set {
				if (_Away_goals != value) {
					OnAway_goalsChanging(value);
					SendPropertyChanging();
					_Away_goals = value;
					SendPropertyChanged("Away_goals");
					OnAway_goalsChanged();
				}
			}
		}
		
		partial void Onls_fitChanging(double? value);
		partial void Onls_fitChanged();
		private double? _ls_fit;
		[Column(Storage=@"_ls_fit", DbType=@"Float")]
		public double? ls_fit
		{
			get { return _ls_fit; }
			set {
				if (_ls_fit != value) {
					Onls_fitChanging(value);
					SendPropertyChanging();
					_ls_fit = value;
					SendPropertyChanged("ls_fit");
					Onls_fitChanged();
				}
			}
		}
		
		partial void Onresult_grnnChanging(string value);
		partial void Onresult_grnnChanged();
		private string _result_grnn;
		[Column(Storage=@"_result_grnn", DbType=@"NVarChar(20)")]
		public string result_grnn
		{
			get { return _result_grnn; }
			set {
				if (_result_grnn != value) {
					Onresult_grnnChanging(value);
					SendPropertyChanging();
					_result_grnn = value;
					SendPropertyChanged("result_grnn");
					Onresult_grnnChanged();
				}
			}
		}
		
		partial void OnResult_goalsChanging(string value);
		partial void OnResult_goalsChanged();
		private string _Result_goals;
		[Column(Storage=@"_Result_goals", Name=@"result_goals", DbType=@"NVarChar(20)")]
		public string Result_goals
		{
			get { return _Result_goals; }
			set {
				if (_Result_goals != value) {
					OnResult_goalsChanging(value);
					SendPropertyChanging();
					_Result_goals = value;
					SendPropertyChanged("Result_goals");
					OnResult_goalsChanged();
				}
			}
		}
		
		partial void OnResult_wdlChanging(string value);
		partial void OnResult_wdlChanged();
		private string _Result_wdl;
		[Column(Storage=@"_Result_wdl", Name=@"result_wdl", DbType=@"NVarChar(20)")]
		public string Result_wdl
		{
			get { return _Result_wdl; }
			set {
				if (_Result_wdl != value) {
					OnResult_wdlChanging(value);
					SendPropertyChanging();
					_Result_wdl = value;
					SendPropertyChanged("Result_wdl");
					OnResult_wdlChanged();
				}
			}
		}
		
		partial void Oncomposite_fitChanging(string value);
		partial void Oncomposite_fitChanged();
		private string _composite_fit;
		[Column(Storage=@"_composite_fit", DbType=@"NVarChar(20)")]
		public string composite_fit
		{
			get { return _composite_fit; }
			set {
				if (_composite_fit != value) {
					Oncomposite_fitChanging(value);
					SendPropertyChanging();
					_composite_fit = value;
					SendPropertyChanged("composite_fit");
					Oncomposite_fitChanged();
				}
			}
		}
		
		partial void OnGrnn_fitChanging(string value);
		partial void OnGrnn_fitChanged();
		private string _Grnn_fit;
		[Column(Storage=@"_Grnn_fit", Name=@"grnn_fit", DbType=@"NVarChar(100)")]
		public string Grnn_fit
		{
			get { return _Grnn_fit; }
			set {
				if (_Grnn_fit != value) {
					OnGrnn_fitChanging(value);
					SendPropertyChanging();
					_Grnn_fit = value;
					SendPropertyChanged("Grnn_fit");
					OnGrnn_fitChanged();
				}
			}
		}
		
		partial void OnPnn_fitChanging(string value);
		partial void OnPnn_fitChanged();
		private string _Pnn_fit;
		[Column(Storage=@"_Pnn_fit", Name=@"pnn_fit", DbType=@"NVarChar(20)")]
		public string Pnn_fit
		{
			get { return _Pnn_fit; }
			set {
				if (_Pnn_fit != value) {
					OnPnn_fitChanging(value);
					SendPropertyChanging();
					_Pnn_fit = value;
					SendPropertyChanged("Pnn_fit");
					OnPnn_fitChanged();
				}
			}
		}
		
		partial void OnHome_team_bigChanging(int? value);
		partial void OnHome_team_bigChanged();
		private int? _Home_team_big;
		[Column(Storage=@"_Home_team_big", Name=@"home_team_big", DbType=@"Int")]
		public int? Home_team_big
		{
			get { return _Home_team_big; }
			set {
				if (_Home_team_big != value) {
					OnHome_team_bigChanging(value);
					SendPropertyChanging();
					_Home_team_big = value;
					SendPropertyChanged("Home_team_big");
					OnHome_team_bigChanged();
				}
			}
		}
		
		partial void OnAway_team_bigChanging(int? value);
		partial void OnAway_team_bigChanged();
		private int? _Away_team_big;
		[Column(Storage=@"_Away_team_big", Name=@"away_team_big", DbType=@"Int")]
		public int? Away_team_big
		{
			get { return _Away_team_big; }
			set {
				if (_Away_team_big != value) {
					OnAway_team_bigChanging(value);
					SendPropertyChanging();
					_Away_team_big = value;
					SendPropertyChanged("Away_team_big");
					OnAway_team_bigChanged();
				}
			}
		}
		
		partial void OnMatch_typeChanging(string value);
		partial void OnMatch_typeChanged();
		private string _Match_type;
		[Column(Storage=@"_Match_type", Name=@"match_type", DbType=@"NVarChar(50)")]
		public string Match_type
		{
			get { return _Match_type; }
			set {
				if (_Match_type != value) {
					OnMatch_typeChanging(value);
					SendPropertyChanging();
					_Match_type = value;
					SendPropertyChanged("Match_type");
					OnMatch_typeChanged();
				}
			}
		}
		
		partial void OnMatch_timeChanging(DateTime? value);
		partial void OnMatch_timeChanged();
		private DateTime? _Match_time;
		[Column(Storage=@"_Match_time", Name=@"match_time", DbType=@"DateTime")]
		public DateTime? Match_time
		{
			get { return _Match_time; }
			set {
				if (_Match_time != value) {
					OnMatch_timeChanging(value);
					SendPropertyChanging();
					_Match_time = value;
					SendPropertyChanged("Match_time");
					OnMatch_timeChanged();
				}
			}
		}
		
		partial void OnHome_teamChanging(string value);
		partial void OnHome_teamChanged();
		private string _Home_team;
		[Column(Storage=@"_Home_team", Name=@"home_team", DbType=@"NVarChar(50)")]
		public string Home_team
		{
			get { return _Home_team; }
			set {
				if (_Home_team != value) {
					OnHome_teamChanging(value);
					SendPropertyChanging();
					_Home_team = value;
					SendPropertyChanged("Home_team");
					OnHome_teamChanged();
				}
			}
		}
		
		partial void OnAway_teamChanging(string value);
		partial void OnAway_teamChanged();
		private string _Away_team;
		[Column(Storage=@"_Away_team", Name=@"away_team", DbType=@"NVarChar(50)")]
		public string Away_team
		{
			get { return _Away_team; }
			set {
				if (_Away_team != value) {
					OnAway_teamChanging(value);
					SendPropertyChanging();
					_Away_team = value;
					SendPropertyChanged("Away_team");
					OnAway_teamChanged();
				}
			}
		}
		
		partial void Onasia_oddsChanging(string value);
		partial void Onasia_oddsChanged();
		private string _asia_odds;
		[Column(Storage=@"_asia_odds", DbType=@"NVarChar(50)")]
		public string asia_odds
		{
			get { return _asia_odds; }
			set {
				if (_asia_odds != value) {
					Onasia_oddsChanging(value);
					SendPropertyChanging();
					_asia_odds = value;
					SendPropertyChanged("asia_odds");
					Onasia_oddsChanged();
				}
			}
		}
		
		partial void Onfull_home_goalsChanging(int? value);
		partial void Onfull_home_goalsChanged();
		private int? _full_home_goals;
		[Column(Storage=@"_full_home_goals", DbType=@"Int")]
		public int? full_home_goals
		{
			get { return _full_home_goals; }
			set {
				if (_full_home_goals != value) {
					Onfull_home_goalsChanging(value);
					SendPropertyChanging();
					_full_home_goals = value;
					SendPropertyChanged("full_home_goals");
					Onfull_home_goalsChanged();
				}
			}
		}
		
		partial void Onfull_away_goalsChanging(int? value);
		partial void Onfull_away_goalsChanged();
		private int? _full_away_goals;
		[Column(Storage=@"_full_away_goals", DbType=@"Int")]
		public int? full_away_goals
		{
			get { return _full_away_goals; }
			set {
				if (_full_away_goals != value) {
					Onfull_away_goalsChanging(value);
					SendPropertyChanging();
					_full_away_goals = value;
					SendPropertyChanged("full_away_goals");
					Onfull_away_goalsChanged();
				}
			}
		}
		
		partial void Onbj_match_numberChanging(string value);
		partial void Onbj_match_numberChanged();
		private string _bj_match_number;
		[Column(Storage=@"_bj_match_number", DbType=@"NVarChar(50)")]
		public string bj_match_number
		{
			get { return _bj_match_number; }
			set {
				if (_bj_match_number != value) {
					Onbj_match_numberChanging(value);
					SendPropertyChanging();
					_bj_match_number = value;
					SendPropertyChanged("bj_match_number");
					Onbj_match_numberChanged();
				}
			}
		}
		
		partial void Onbj_host_oddsChanging(string value);
		partial void Onbj_host_oddsChanged();
		private string _bj_host_odds;
		[Column(Storage=@"_bj_host_odds", DbType=@"NVarChar(50)")]
		public string bj_host_odds
		{
			get { return _bj_host_odds; }
			set {
				if (_bj_host_odds != value) {
					Onbj_host_oddsChanging(value);
					SendPropertyChanging();
					_bj_host_odds = value;
					SendPropertyChanged("bj_host_odds");
					Onbj_host_oddsChanged();
				}
			}
		}
		
		partial void Onbj_selectChanging(int? value);
		partial void Onbj_selectChanged();
		private int? _bj_select;
		[Column(Storage=@"_bj_select", DbType=@"Int")]
		public int? bj_select
		{
			get { return _bj_select; }
			set {
				if (_bj_select != value) {
					Onbj_selectChanging(value);
					SendPropertyChanging();
					_bj_select = value;
					SendPropertyChanged("bj_select");
					Onbj_selectChanged();
				}
			}
		}
		
		partial void OnMacau_predicationChanging(string value);
		partial void OnMacau_predicationChanged();
		private string _Macau_predication;
		[Column(Storage=@"_Macau_predication", DbType=@"NVarChar(50)")]
		public string Macau_predication
		{
			get { return _Macau_predication; }
			set {
				if (_Macau_predication != value) {
					OnMacau_predicationChanging(value);
					SendPropertyChanging();
					_Macau_predication = value;
					SendPropertyChanged("Macau_predication");
					OnMacau_predicationChanged();
				}
			}
		}
		
		#endregion
	}
}
#pragma warning restore 1591